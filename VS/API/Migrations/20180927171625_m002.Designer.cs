// <auto-generated />
using API.Tables;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20180927171625_m002")]
    partial class m002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Tables.PP_Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("GroupName");

                    b.HasKey("CategoryID");

                    b.ToTable("PP_Categories");
                });

            modelBuilder.Entity("API.Tables.PP_CentricScore", b =>
                {
                    b.Property<Guid>("CentricScoreID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GroupName");

                    b.Property<string>("Score");

                    b.Property<string>("ScoreDesc");

                    b.HasKey("CentricScoreID");

                    b.ToTable("PP_CentricScores");
                });

            modelBuilder.Entity("API.Tables.PP_Comment", b =>
                {
                    b.Property<Guid>("MainID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FullName");

                    b.Property<string>("GroupName");

                    b.HasKey("MainID");

                    b.ToTable("PP_Comments");
                });

            modelBuilder.Entity("API.Tables.PP_Contact", b =>
                {
                    b.Property<Guid>("ContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactName");

                    b.Property<string>("GroupName");

                    b.Property<string>("LastName");

                    b.HasKey("ContactID");

                    b.ToTable("PP_Contacts");
                });

            modelBuilder.Entity("API.Tables.PP_Department", b =>
                {
                    b.Property<Guid>("DepartmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Department");

                    b.Property<string>("GroupName");

                    b.HasKey("DepartmentID");

                    b.ToTable("PP_Departments");
                });

            modelBuilder.Entity("API.Tables.PP_MapCode", b =>
                {
                    b.Property<Guid>("MapCodeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GroupName");

                    b.Property<string>("MapCode");

                    b.HasKey("MapCodeID");

                    b.ToTable("PP_MapCodes");
                });

            modelBuilder.Entity("API.Tables.PP_ProjectContacts", b =>
                {
                    b.Property<Guid>("MainID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contacts");

                    b.Property<string>("GroupName");

                    b.Property<string>("Type");

                    b.HasKey("MainID");

                    b.ToTable("PP_ProjectContacts");
                });

            modelBuilder.Entity("API.Tables.PP_Projects", b =>
                {
                    b.Property<Guid>("ProjectID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerCentricScore");

                    b.Property<Guid>("CustomerMapCode");

                    b.Property<DateTime>("DateAdded");

                    b.Property<Guid>("DepartmentID");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("EndDateChanged");

                    b.Property<Guid>("ProjectCategory");

                    b.Property<string>("ProjectManager");

                    b.Property<string>("ProjectNumber");

                    b.Property<string>("ProjectOverview");

                    b.Property<string>("ProjectSponsor");

                    b.Property<string>("ProjectStakeHolder");

                    b.Property<DateTime>("ProjectTargetDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.HasKey("ProjectID");

                    b.ToTable("PP_Project");
                });
#pragma warning restore 612, 618
        }
    }
}
