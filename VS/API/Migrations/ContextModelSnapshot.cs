// <auto-generated />
using API.Tables;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace API.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Tables.PP_Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.HasKey("CategoryID");

                    b.ToTable("PP_Categories");
                });

            modelBuilder.Entity("API.Tables.PP_CentricScore", b =>
                {
                    b.Property<int>("CentricScoreID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Score");

                    b.Property<string>("ScoreDesc");

                    b.HasKey("CentricScoreID");

                    b.ToTable("PP_CentricScores");
                });

            modelBuilder.Entity("API.Tables.PP_Comment", b =>
                {
                    b.Property<int>("MainID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FullName");

                    b.HasKey("MainID");

                    b.ToTable("PP_Comments");
                });

            modelBuilder.Entity("API.Tables.PP_Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactName");

                    b.Property<string>("LastName");

                    b.HasKey("ContactID");

                    b.ToTable("PP_Contacts");
                });

            modelBuilder.Entity("API.Tables.PP_Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Department");

                    b.HasKey("DepartmentID");

                    b.ToTable("PP_Departments");
                });

            modelBuilder.Entity("API.Tables.PP_Main", b =>
                {
                    b.Property<int>("MainID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryID");

                    b.Property<int>("CentricScoreID");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateEnded");

                    b.Property<DateTime>("DatePrevious");

                    b.Property<DateTime>("DateStarted");

                    b.Property<int>("DepartmentID");

                    b.Property<string>("MapCode");

                    b.Property<string>("Overview");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TargetDate");

                    b.Property<int>("TaskCompleted");

                    b.Property<int>("TaskInProgress");

                    b.Property<int>("TaskUpcoming");

                    b.HasKey("MainID");

                    b.ToTable("PP_Main");
                });

            modelBuilder.Entity("API.Tables.PP_MapCode", b =>
                {
                    b.Property<int>("MapCodeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MapCode");

                    b.HasKey("MapCodeID");

                    b.ToTable("PP_MapCodes");
                });

            modelBuilder.Entity("API.Tables.PP_ProjectContacts", b =>
                {
                    b.Property<int>("MainID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contacts");

                    b.Property<string>("Type");

                    b.HasKey("MainID");

                    b.ToTable("PP_ProjectContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
